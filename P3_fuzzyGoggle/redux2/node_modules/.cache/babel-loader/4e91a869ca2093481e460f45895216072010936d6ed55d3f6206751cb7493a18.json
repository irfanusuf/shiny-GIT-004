{"ast":null,"code":"import { axiosInstance } from \"./axiosInstance\";\nexport const apiCall = (requsetType, apiPrefix, url, paramId, e, formData) => async action => {\n  try {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n    let res;\n    action({\n      type: `${apiPrefix}_API_REQUEST`\n    }); // state.loading :true\n\n    if (requsetType === \"POST\") {\n      res = await axiosInstance.post(`${url}`, formData);\n    } else if (requsetType === \"PUT\" && paramId !== undefined) {\n      res = await axiosInstance.put(`${url}/${paramId}`, formData);\n    } else if (requsetType === \"GET\") {\n      if (paramId !== undefined) {\n        res = await axiosInstance.get(`${url}/${paramId}`);\n      } else {\n        res = await axiosInstance.get(url);\n      }\n    } else if (requsetType === \"DELETE\") {\n      if (paramId !== undefined) {\n        res = await axiosInstance.delete(`${url}/${paramId}`);\n      } else {\n        res = await axiosInstance.delete(url);\n      }\n    }\n    if (res.status === 200) {\n      action({\n        type: `${apiPrefix}_API_SUCCESS`,\n        payload: res.data.payload,\n        message: res.data.message,\n        username: res.data.username,\n        email: res.data.email\n      });\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    console.error(err);\n    if (err.message === \"Network Error\") {\n      return;\n    } else {\n      action({\n        type: `${apiPrefix}_API_FAILURE`,\n        error: err,\n        message: err.response.data.message\n      });\n    }\n    return false;\n  }\n};","map":{"version":3,"names":["axiosInstance","apiCall","requsetType","apiPrefix","url","paramId","e","formData","action","undefined","preventDefault","res","type","post","put","get","delete","status","payload","data","message","username","email","err","console","error","response"],"sources":["/home/irfan_usuf/ILS/GIT004/P3_fuzzyGoggle/redux2/src/utils/apiCall.js"],"sourcesContent":["import { axiosInstance } from \"./axiosInstance\";\n\nexport const apiCall =\n  (requsetType, apiPrefix,  url, paramId , e, formData) => async (action) => {\n    try {\n      if (e !== undefined) {\n        e.preventDefault();\n      }\n\n      let res;\n\n      action({ type: `${apiPrefix}_API_REQUEST` }); // state.loading :true\n\n      if (requsetType === \"POST\") {\n\n        res = await axiosInstance.post(`${url}`, formData);\n\n      } else if (requsetType === \"PUT\" && paramId !== undefined) {\n\n        res = await axiosInstance.put(`${url}/${paramId}`, formData);\n\n      } else if (requsetType === \"GET\") {\n\n        if (paramId !== undefined) {\n          res = await axiosInstance.get(`${url}/${paramId}`);\n        } else {\n          res = await axiosInstance.get(url);\n        }\n\n      } else if (requsetType === \"DELETE\") {\n\n        if (paramId !== undefined) {\n          res = await axiosInstance.delete(`${url}/${paramId}`);\n        } else {\n          res = await axiosInstance.delete(url);\n        }\n\n      }\n\n      if (res.status === 200) {\n        action({\n          type:  `${apiPrefix}_API_SUCCESS` ,\n          payload: res.data.payload,\n          message: res.data.message,\n          username: res.data.username,\n          email: res.data.email,\n        });\n\n        return true;\n      } else {\n        return false;\n      }\n    } catch (err) {\n      console.error(err);\n\n    \n        if(err.message === \"Network Error\"){\n          return\n        }else{\n\n          action({\n            type:  `${apiPrefix}_API_FAILURE` ,\n            error: err,\n            message: err.response.data.message,   \n          });  \n        }\n        \n      return false;\n    }\n  };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,OAAO,GAClBA,CAACC,WAAW,EAAEC,SAAS,EAAGC,GAAG,EAAEC,OAAO,EAAGC,CAAC,EAAEC,QAAQ,KAAK,MAAOC,MAAM,IAAK;EACzE,IAAI;IACF,IAAIF,CAAC,KAAKG,SAAS,EAAE;MACnBH,CAAC,CAACI,cAAc,CAAC,CAAC;IACpB;IAEA,IAAIC,GAAG;IAEPH,MAAM,CAAC;MAAEI,IAAI,EAAE,GAAGT,SAAS;IAAe,CAAC,CAAC,CAAC,CAAC;;IAE9C,IAAID,WAAW,KAAK,MAAM,EAAE;MAE1BS,GAAG,GAAG,MAAMX,aAAa,CAACa,IAAI,CAAC,GAAGT,GAAG,EAAE,EAAEG,QAAQ,CAAC;IAEpD,CAAC,MAAM,IAAIL,WAAW,KAAK,KAAK,IAAIG,OAAO,KAAKI,SAAS,EAAE;MAEzDE,GAAG,GAAG,MAAMX,aAAa,CAACc,GAAG,CAAC,GAAGV,GAAG,IAAIC,OAAO,EAAE,EAAEE,QAAQ,CAAC;IAE9D,CAAC,MAAM,IAAIL,WAAW,KAAK,KAAK,EAAE;MAEhC,IAAIG,OAAO,KAAKI,SAAS,EAAE;QACzBE,GAAG,GAAG,MAAMX,aAAa,CAACe,GAAG,CAAC,GAAGX,GAAG,IAAIC,OAAO,EAAE,CAAC;MACpD,CAAC,MAAM;QACLM,GAAG,GAAG,MAAMX,aAAa,CAACe,GAAG,CAACX,GAAG,CAAC;MACpC;IAEF,CAAC,MAAM,IAAIF,WAAW,KAAK,QAAQ,EAAE;MAEnC,IAAIG,OAAO,KAAKI,SAAS,EAAE;QACzBE,GAAG,GAAG,MAAMX,aAAa,CAACgB,MAAM,CAAC,GAAGZ,GAAG,IAAIC,OAAO,EAAE,CAAC;MACvD,CAAC,MAAM;QACLM,GAAG,GAAG,MAAMX,aAAa,CAACgB,MAAM,CAACZ,GAAG,CAAC;MACvC;IAEF;IAEA,IAAIO,GAAG,CAACM,MAAM,KAAK,GAAG,EAAE;MACtBT,MAAM,CAAC;QACLI,IAAI,EAAG,GAAGT,SAAS,cAAc;QACjCe,OAAO,EAAEP,GAAG,CAACQ,IAAI,CAACD,OAAO;QACzBE,OAAO,EAAET,GAAG,CAACQ,IAAI,CAACC,OAAO;QACzBC,QAAQ,EAAEV,GAAG,CAACQ,IAAI,CAACE,QAAQ;QAC3BC,KAAK,EAAEX,GAAG,CAACQ,IAAI,CAACG;MAClB,CAAC,CAAC;MAEF,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAGhB,IAAGA,GAAG,CAACH,OAAO,KAAK,eAAe,EAAC;MACjC;IACF,CAAC,MAAI;MAEHZ,MAAM,CAAC;QACLI,IAAI,EAAG,GAAGT,SAAS,cAAc;QACjCsB,KAAK,EAAEF,GAAG;QACVH,OAAO,EAAEG,GAAG,CAACG,QAAQ,CAACP,IAAI,CAACC;MAC7B,CAAC,CAAC;IACJ;IAEF,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}