{"ast":null,"code":"var _jsxFileName = \"/home/irfan_usuf/ILS/GIT004/P3_fuzzyGoggle/client/src/context/Store.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext } from \"react\";\nimport App from \"../App\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { axiosInstance } from \"../utils/axiosInstance\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nconst Store = () => {\n  _s();\n  const navigate = useNavigate();\n  const [store, setStore] = React.useState({\n    btnName: \"Something\",\n    darkMode: false,\n    username: \"John Doe\"\n  });\n  const handleRegister = async (e, form) => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(`http://localhost:5157/api/user/register`, form);\n      console.log(res.data);\n      if (res.status === 200) {\n        toast.success(\"User registered successfully\");\n      }\n    } catch (error) {\n      if (error.response && [400, 401, 403, 404, 500].includes(error.response.status)) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Some Network Error!\");\n      }\n      console.log(error);\n    }\n  };\n  const handleLogin = async (e, formData) => {\n    e.preventDefault();\n    try {\n      const res = await axiosInstance.post(\"/user/login\", formData);\n      console.log(res.data);\n      if (res.status === 200) {\n        toast.success(res.data.message);\n\n        // api result save\n        localStorage.setItem(\"token\", res.data.payload);\n        localStorage.setItem(\"userId\", res.data.userId);\n        navigate(\"/dashboard\");\n      }\n    } catch (error) {\n      if (error.response && [400, 401, 403, 404, 500].includes(error.response.status)) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Some Network Error!\");\n      }\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      ...store,\n      handleRegister,\n      handleLogin\n    },\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Store, \"8+73DLkQjJOaDDL5dj+YxOfvsJI=\", false, function () {\n  return [useNavigate];\n});\n_c = Store;\nexport default Store;\nvar _c;\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"names":["React","createContext","App","axios","toast","axiosInstance","useNavigate","jsxDEV","_jsxDEV","Context","Store","_s","navigate","store","setStore","useState","btnName","darkMode","username","handleRegister","e","form","preventDefault","res","post","console","log","data","status","success","error","response","includes","message","handleLogin","formData","localStorage","setItem","payload","userId","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/irfan_usuf/ILS/GIT004/P3_fuzzyGoggle/client/src/context/Store.jsx"],"sourcesContent":["import React, { createContext } from \"react\";\nimport App from \"../App\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { axiosInstance } from \"../utils/axiosInstance\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Context = createContext();\n\nconst Store = () => {\n\n  const navigate = useNavigate();\n\n  const [store, setStore] = React.useState({\n    btnName: \"Something\",\n    darkMode: false,\n    username: \"John Doe\",\n  });\n\n  const handleRegister = async (e, form) => {\n    e.preventDefault();\n\n    try {\n      const res = await axios.post(\n        `http://localhost:5157/api/user/register`,\n        form\n      );\n\n      console.log(res.data);\n\n      if (res.status === 200) {\n        toast.success(\"User registered successfully\");\n      }\n\n    \n    } catch (error) {\n      if (error.response && [400, 401, 403, 404, 500].includes(error.response.status)) {\n        toast.error(error.response.data.message);\n      }else{\n        toast.error(\"Some Network Error!\");\n      }\n\n      console.log(error);\n    }\n  };\n\n  const handleLogin = async (e, formData) => {\n    e.preventDefault();\n    try {\n      const res = await axiosInstance.post(\"/user/login\", formData);\n      console.log(res.data);\n      if (res.status === 200) {\n        toast.success(res.data.message);\n\n        // api result save\n        localStorage.setItem(\"token\", res.data.payload);\n        localStorage.setItem(\"userId\", res.data.userId);\n    \n        navigate(\"/dashboard\");\n      }\n    } catch (error) {\n      if (\n        error.response &&\n        [400, 401, 403, 404, 500].includes(error.response.status)\n      ) {\n        toast.error(error.response.data.message);\n      \n      } else {\n        toast.error(\"Some Network Error!\");\n      }\n      console.log(error);\n    }\n  };\n\n  return (\n    <Context.Provider value={{ ...store, handleRegister, handleLogin }}>\n      <App />\n    </Context.Provider>\n  );\n};\n\nexport default Store;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}