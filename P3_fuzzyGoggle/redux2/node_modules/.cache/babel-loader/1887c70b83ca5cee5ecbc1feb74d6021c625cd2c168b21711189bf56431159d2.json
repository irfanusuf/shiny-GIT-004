{"ast":null,"code":"import { axiosInstance } from \"./axiosInstance\";\nexport const apiCall = (url, e, formData, Id) => async action => {\n  try {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n    let res;\n    action({\n      type: \"API_REQUEST\"\n    }); // state.loading :true\n\n    if (formData !== undefined) {\n      if (Id === undefined) {\n        res = await axiosInstance.post(`${url}`, formData);\n      } else {\n        res = await axiosInstance.put(`${url}/${Id}`, formData);\n      }\n    } else {\n      res = await axiosInstance.get(url);\n    }\n    if (res.status === 200) {\n      action({\n        type: \"API_SUCCESS\",\n        payload: res.data.payload,\n        message: res.data.message,\n        username: res.data.username,\n        email: res.data.email\n      });\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    console.log(err);\n    action({\n      type: \"API_FAILURE\",\n      error: err,\n      message: err.message\n    });\n    return false;\n  }\n};","map":{"version":3,"names":["axiosInstance","apiCall","url","e","formData","Id","action","undefined","preventDefault","res","type","post","put","get","status","payload","data","message","username","email","err","console","log","error"],"sources":["/home/irfan_usuf/ILS/GIT004/P3_fuzzyGoggle/redux2/src/utils/apiCall.js"],"sourcesContent":["import { axiosInstance } from \"./axiosInstance\";\n\nexport const apiCall = (url, e, formData, Id) => async (action) => {\n  try {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n\n    let res;\n\n    action({ type: \"API_REQUEST\" }); // state.loading :true\n\n    if (formData !== undefined) {\n\n      if (Id === undefined) {\n        res = await axiosInstance.post(`${url}`, formData);\n\n      } else {\n        res = await axiosInstance.put(`${url}/${Id}`, formData);\n      }\n\n    } else {\n\n\n      res = await axiosInstance.get(url);\n    }\n\n    if (res.status === 200) {\n      action({\n        type: \"API_SUCCESS\",\n        payload: res.data.payload,\n        message: res.data.message,\n        username: res.data.username,\n        email: res.data.email,\n      });\n\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    console.log(err);\n    action({\n      type: \"API_FAILURE\",\n      error: err,\n      message: err.message,\n    });\n\n    return false;\n  }\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,CAAC,EAAEC,QAAQ,EAAEC,EAAE,KAAK,MAAOC,MAAM,IAAK;EACjE,IAAI;IACF,IAAIH,CAAC,KAAKI,SAAS,EAAE;MACnBJ,CAAC,CAACK,cAAc,CAAC,CAAC;IACpB;IAEA,IAAIC,GAAG;IAEPH,MAAM,CAAC;MAAEI,IAAI,EAAE;IAAc,CAAC,CAAC,CAAC,CAAC;;IAEjC,IAAIN,QAAQ,KAAKG,SAAS,EAAE;MAE1B,IAAIF,EAAE,KAAKE,SAAS,EAAE;QACpBE,GAAG,GAAG,MAAMT,aAAa,CAACW,IAAI,CAAC,GAAGT,GAAG,EAAE,EAAEE,QAAQ,CAAC;MAEpD,CAAC,MAAM;QACLK,GAAG,GAAG,MAAMT,aAAa,CAACY,GAAG,CAAC,GAAGV,GAAG,IAAIG,EAAE,EAAE,EAAED,QAAQ,CAAC;MACzD;IAEF,CAAC,MAAM;MAGLK,GAAG,GAAG,MAAMT,aAAa,CAACa,GAAG,CAACX,GAAG,CAAC;IACpC;IAEA,IAAIO,GAAG,CAACK,MAAM,KAAK,GAAG,EAAE;MACtBR,MAAM,CAAC;QACLI,IAAI,EAAE,aAAa;QACnBK,OAAO,EAAEN,GAAG,CAACO,IAAI,CAACD,OAAO;QACzBE,OAAO,EAAER,GAAG,CAACO,IAAI,CAACC,OAAO;QACzBC,QAAQ,EAAET,GAAG,CAACO,IAAI,CAACE,QAAQ;QAC3BC,KAAK,EAAEV,GAAG,CAACO,IAAI,CAACG;MAClB,CAAC,CAAC;MAEF,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBd,MAAM,CAAC;MACLI,IAAI,EAAE,aAAa;MACnBa,KAAK,EAAEH,GAAG;MACVH,OAAO,EAAEG,GAAG,CAACH;IACf,CAAC,CAAC;IAEF,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}