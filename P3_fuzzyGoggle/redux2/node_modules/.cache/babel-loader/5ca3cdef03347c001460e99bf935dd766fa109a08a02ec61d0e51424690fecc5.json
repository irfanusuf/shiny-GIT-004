{"ast":null,"code":"import { axiosInstance } from \"./axiosInstance\";\nexport const apiCall = (url, e, formData) => async action => {\n  try {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n    let res;\n    action({\n      type: \"API_REQUEST\"\n    }); // state.loading :true\n\n    console.log(formData);\n    if (formData !== undefined) {\n      res = await axiosInstance.post(`${url}`, formData);\n    } else {\n      res = await axiosInstance.get(`${url}/${token}`);\n    }\n    if (res.status === 200) {\n      action({\n        type: \"API_SUCCESS\",\n        payload: res.data.payload,\n        message: res.data.message,\n        username: res.data.username,\n        email: res.data.email\n      });\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    console.log(err);\n    action({\n      type: \"API_FAILURE\",\n      error: err,\n      message: err.message\n    });\n    return false;\n  }\n};","map":{"version":3,"names":["axiosInstance","apiCall","url","e","formData","action","undefined","preventDefault","res","type","console","log","post","get","token","status","payload","data","message","username","email","err","error"],"sources":["/home/irfan_usuf/ILS/GIT004/P3_fuzzyGoggle/redux2/src/utils/apiCall.js"],"sourcesContent":["import { axiosInstance } from \"./axiosInstance\";\n\nexport const apiCall = (url, e , formData) => async (action) => {\n  try {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n\n    let res;\n\n    action({ type: \"API_REQUEST\" }); // state.loading :true\n\n    console.log(formData);\n\n    if (formData !== undefined) {\n      res = await axiosInstance.post(`${url}`, formData);\n    } else {\n      res = await axiosInstance.get(`${url}/${token}`);\n    }\n\n\n\n    if (res.status === 200) {\n      action({\n        type: \"API_SUCCESS\",\n        payload: res.data.payload,\n        message: res.data.message,\n        username: res.data.username,\n        email: res.data.email,\n      });\n\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    console.log(err);\n    action({\n      type: \"API_FAILURE\",\n      error: err,\n      message: err.message,\n    });\n\n    return false;\n  }\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,CAAC,EAAGC,QAAQ,KAAK,MAAOC,MAAM,IAAK;EAC9D,IAAI;IACF,IAAIF,CAAC,KAAKG,SAAS,EAAE;MACnBH,CAAC,CAACI,cAAc,CAAC,CAAC;IACpB;IAEA,IAAIC,GAAG;IAEPH,MAAM,CAAC;MAAEI,IAAI,EAAE;IAAc,CAAC,CAAC,CAAC,CAAC;;IAEjCC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IAErB,IAAIA,QAAQ,KAAKE,SAAS,EAAE;MAC1BE,GAAG,GAAG,MAAMR,aAAa,CAACY,IAAI,CAAC,GAAGV,GAAG,EAAE,EAAEE,QAAQ,CAAC;IACpD,CAAC,MAAM;MACLI,GAAG,GAAG,MAAMR,aAAa,CAACa,GAAG,CAAC,GAAGX,GAAG,IAAIY,KAAK,EAAE,CAAC;IAClD;IAIA,IAAIN,GAAG,CAACO,MAAM,KAAK,GAAG,EAAE;MACtBV,MAAM,CAAC;QACLI,IAAI,EAAE,aAAa;QACnBO,OAAO,EAAER,GAAG,CAACS,IAAI,CAACD,OAAO;QACzBE,OAAO,EAAEV,GAAG,CAACS,IAAI,CAACC,OAAO;QACzBC,QAAQ,EAAEX,GAAG,CAACS,IAAI,CAACE,QAAQ;QAC3BC,KAAK,EAAEZ,GAAG,CAACS,IAAI,CAACG;MAClB,CAAC,CAAC;MAEF,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;IAChBhB,MAAM,CAAC;MACLI,IAAI,EAAE,aAAa;MACnBa,KAAK,EAAED,GAAG;MACVH,OAAO,EAAEG,GAAG,CAACH;IACf,CAAC,CAAC;IAEF,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}