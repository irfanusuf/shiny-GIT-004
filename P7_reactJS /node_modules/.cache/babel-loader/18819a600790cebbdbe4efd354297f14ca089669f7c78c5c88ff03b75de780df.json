{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { axiosInstance } from \"./axiosInstance\";\nimport { useNavigate } from \"react-router-dom\";\nconst IsAuthorised = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      if (!token || token === \"undefined\" || token === \"null\") {\n        navigate(\"/login\");\n        return;\n      }\n      const verifyToken = async () => {\n        try {\n          const res = await axiosInstance.get(`user/verify/${token}`);\n          if (res.status === 200) {\n            return true;\n          } else {\n            return false;\n          }\n        } catch (error) {\n          console.error(\"Error verifying token:\", error);\n          return false;\n        }\n      };\n      const verify = await verifyToken();\n      if (!verify) {\n        navigate(\"/login\");\n      }\n    })();\n  }, [token, navigate]);\n};\n_s(IsAuthorised, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = IsAuthorised;\nexport default IsAuthorised;\nvar _c;\n$RefreshReg$(_c, \"IsAuthorised\");","map":{"version":3,"names":["useEffect","axiosInstance","useNavigate","IsAuthorised","_s","token","localStorage","getItem","navigate","verifyToken","res","get","status","error","console","verify","_c","$RefreshReg$"],"sources":["/home/irfan_usuf/ILS/GIT004/P3_fuzzyGoggle/client/src/utils/IsAuthorised.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { axiosInstance } from \"./axiosInstance\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst IsAuthorised = () => {\n  const token = localStorage.getItem(\"token\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      if (!token || token === \"undefined\" || token === \"null\") {\n        navigate(\"/login\");\n        return;\n      }\n\n      const verifyToken = async () => {\n        try {\n          const res = await axiosInstance.get(`user/verify/${token}`);\n\n          if (res.status === 200) {\n            return true;\n          } else {\n            return false;\n          }\n        } catch (error) {\n          console.error(\"Error verifying token:\", error);\n          return false;\n        }\n      };\n\n      const verify = await verifyToken();\n\n      if (!verify) {\n        navigate(\"/login\");\n      }\n    })();\n  }, [token, navigate]);\n};\n\nexport default IsAuthorised;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,IAAI,CAACK,KAAK,IAAIA,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,MAAM,EAAE;QACvDG,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MAEA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;QAC9B,IAAI;UACF,MAAMC,GAAG,GAAG,MAAMT,aAAa,CAACU,GAAG,CAAC,eAAeN,KAAK,EAAE,CAAC;UAE3D,IAAIK,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;YACtB,OAAO,IAAI;UACb,CAAC,MAAM;YACL,OAAO,KAAK;UACd;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9C,OAAO,KAAK;QACd;MACF,CAAC;MAED,MAAME,MAAM,GAAG,MAAMN,WAAW,CAAC,CAAC;MAElC,IAAI,CAACM,MAAM,EAAE;QACXP,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,CAACH,KAAK,EAAEG,QAAQ,CAAC,CAAC;AACvB,CAAC;AAACJ,EAAA,CAjCID,YAAY;EAAA,QAECD,WAAW;AAAA;AAAAc,EAAA,GAFxBb,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}