{"ast":null,"code":"// import { axiosInstance } from \"../../utils/axiosInstance\";\n\nimport { apiCall } from \"../../utils/apiCall\";\n\n// export const handleRegister = (e, formData) => async (action) => {\n//   try {\n//     e.preventDefault();\n//     action({ type: \"API_REQUEST\" }); // state.loading :true\n\n//     const res = await axiosInstance.post(\"/user/register\", formData);\n\n//     if (res.status === 200) {\n//       action({\n//         type: \"API_SUCCESS\",\n//         payload: res.data.payload,\n//         message: res.data.message,\n//         username : res.data.username,\n//         email : res.data.email\n//       });\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     action({\n//       type: \"API_FAILURE\",\n//       error: err,\n//       message: err.message,\n//     });\n//   }\n// };\n\n// export const handleLogin = (e, formData) => async (action) => {\n//   try {\n//     e.preventDefault();\n//     action({ type: \"API_REQUEST\" }); // state.loading :true\n\n//     const res = await axiosInstance.post(\"/user/login\", formData);\n\n//     if (res.status === 200) {\n//       action({\n//         type: \"API_SUCCESS\",\n//         payload: res.data.payload,\n//         message: res.data.message,\n//         username : res.data.username,\n//         email : res.data.email\n//       });\n\n//       localStorage.setItem(\"token\" , res.data.payload)\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     action({\n//       type: \"API_FAILURE\",\n//       error: err,\n//       message: err.message,\n//     });\n//   }\n// };\n\n// export const verifyUser = (token) => async (action) => {\n//   try {\n\n//     action({ type: \"API_REQUEST\" }); // state.loading :true\n\n//     const res = await axiosInstance.get(`/user/verify/${token}`);\n\n//     if (res.status === 200) {\n\n//       action({\n//         type: \"API_SUCCESS\",\n//         payload: res.data.payload,\n//         message: res.data.message,\n//         username : res.data.username,\n//         email : res.data.email\n//       });\n\n//       return true\n\n//     }else{\n//       return false\n//     }\n//   } catch (err) {\n\n//     console.log(err);\n//     action({\n//       type: \"API_FAILURE\",\n//       error: err,\n//       message: err.message,\n//     });\n\n//     return false\n//   }\n// };\n\nexport const handleRegister = (e, formData) => {\n  apiCall(\"/user/register\", e, formData);\n};\nexport const handleLogin = (e, formData) => {\n  apiCall(\"/user/login\", e, formData);\n};\nexport const verifyUser = token => {\n  apiCall(\"/user/verify\", token);\n};","map":{"version":3,"names":["apiCall","handleRegister","e","formData","handleLogin","verifyUser","token"],"sources":["/home/irfan_usuf/ILS/GIT004/P3_fuzzyGoggle/redux2/src/redux/actions/userActions.jsx"],"sourcesContent":["// import { axiosInstance } from \"../../utils/axiosInstance\";\n\nimport { apiCall } from \"../../utils/apiCall\";\n\n// export const handleRegister = (e, formData) => async (action) => {\n//   try {\n//     e.preventDefault();\n//     action({ type: \"API_REQUEST\" }); // state.loading :true\n\n//     const res = await axiosInstance.post(\"/user/register\", formData);\n\n//     if (res.status === 200) {\n//       action({\n//         type: \"API_SUCCESS\",\n//         payload: res.data.payload,\n//         message: res.data.message,\n//         username : res.data.username,\n//         email : res.data.email\n//       });\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     action({\n//       type: \"API_FAILURE\",\n//       error: err,\n//       message: err.message,\n//     });\n//   }\n// };\n\n\n// export const handleLogin = (e, formData) => async (action) => {\n//   try {\n//     e.preventDefault();\n//     action({ type: \"API_REQUEST\" }); // state.loading :true\n\n//     const res = await axiosInstance.post(\"/user/login\", formData);\n\n//     if (res.status === 200) {\n//       action({\n//         type: \"API_SUCCESS\",\n//         payload: res.data.payload,\n//         message: res.data.message,\n//         username : res.data.username,\n//         email : res.data.email\n//       });\n\n\n//       localStorage.setItem(\"token\" , res.data.payload)\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     action({\n//       type: \"API_FAILURE\",\n//       error: err,\n//       message: err.message,\n//     });\n//   }\n// };\n\n\n// export const verifyUser = (token) => async (action) => {\n//   try {\n   \n//     action({ type: \"API_REQUEST\" }); // state.loading :true\n\n//     const res = await axiosInstance.get(`/user/verify/${token}`);\n\n//     if (res.status === 200) {\n\n//       action({\n//         type: \"API_SUCCESS\",\n//         payload: res.data.payload,\n//         message: res.data.message,\n//         username : res.data.username,\n//         email : res.data.email\n//       });\n\n//       return true\n\n//     }else{\n//       return false\n//     }\n//   } catch (err) {\n\n    \n//     console.log(err);\n//     action({\n//       type: \"API_FAILURE\",\n//       error: err,\n//       message: err.message,\n//     });\n\n//     return false\n//   }\n// };\n\n\n\n\nexport const handleRegister =  (e , formData) => {apiCall(\"/user/register\", e , formData )}  \nexport const handleLogin =  (e,formData) => {apiCall(\"/user/login\", e , formData )}  \nexport const verifyUser =  (token)=>{apiCall(\"/user/verify\" , token )} \n"],"mappings":"AAAA;;AAEA,SAASA,OAAO,QAAQ,qBAAqB;;AAE7C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAKA,OAAO,MAAMC,cAAc,GAAIA,CAACC,CAAC,EAAGC,QAAQ,KAAK;EAACH,OAAO,CAAC,gBAAgB,EAAEE,CAAC,EAAGC,QAAS,CAAC;AAAA,CAAC;AAC3F,OAAO,MAAMC,WAAW,GAAIA,CAACF,CAAC,EAACC,QAAQ,KAAK;EAACH,OAAO,CAAC,aAAa,EAAEE,CAAC,EAAGC,QAAS,CAAC;AAAA,CAAC;AACnF,OAAO,MAAME,UAAU,GAAKC,KAAK,IAAG;EAACN,OAAO,CAAC,cAAc,EAAGM,KAAM,CAAC;AAAA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}