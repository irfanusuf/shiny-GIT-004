{"ast":null,"code":"import { axiosInstance } from \"./axiosInstance\";\nexport const apiCall = (url, token, e, formData) => async action => {\n  try {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n    let res;\n    action({\n      type: \"API_REQUEST\"\n    }); // state.loading :true\n\n    console.log(formData);\n    if (formData !== undefined) {\n      res = await axiosInstance.post(`${url}`, formData);\n    } else {\n      res = await axiosInstance.get(`${url}/${token}`);\n    }\n    if (res.status === 200) {\n      action({\n        type: \"API_SUCCESS\",\n        payload: res.data.payload,\n        message: res.data.message,\n        username: res.data.username,\n        email: res.data.email\n      });\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    console.log(err);\n    action({\n      type: \"API_FAILURE\",\n      error: err,\n      message: err.message\n    });\n    return false;\n  }\n};","map":{"version":3,"names":["axiosInstance","apiCall","url","token","e","formData","action","undefined","preventDefault","res","type","console","log","post","get","status","payload","data","message","username","email","err","error"],"sources":["/home/irfan_usuf/ILS/GIT004/P3_fuzzyGoggle/redux2/src/utils/apiCall.js"],"sourcesContent":["import {axiosInstance} from \"./axiosInstance\"\n\n\nexport const apiCall = (url ,token , e , formData  ) => async (action) => {\n    try {\n\n        if(e !== undefined){\n            e.preventDefault();\n        }\n\n  \n      let res; \n  \n      action({ type: \"API_REQUEST\" }); // state.loading :true\n  \n  \n      console.log(formData)\n\n      if(formData !== undefined){\n         res = await axiosInstance.post(`${url}`, formData)\n      }\n      else{\n         res = await axiosInstance.get(`${url}/${token}`);\n      } \n  \n      if (res.status === 200) {\n  \n        action({\n          type: \"API_SUCCESS\",\n          payload: res.data.payload,\n          message: res.data.message,\n          username : res.data.username,\n          email : res.data.email\n        });\n  \n        return true\n  \n      }else{\n        return false\n      }\n    } catch (err) {\n  \n      \n      console.log(err);\n      action({\n        type: \"API_FAILURE\",\n        error: err,\n        message: err.message,\n      });\n  \n      return false\n    }\n  };"],"mappings":"AAAA,SAAQA,aAAa,QAAO,iBAAiB;AAG7C,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,KAAK,EAAGC,CAAC,EAAGC,QAAQ,KAAO,MAAOC,MAAM,IAAK;EACtE,IAAI;IAEA,IAAGF,CAAC,KAAKG,SAAS,EAAC;MACfH,CAAC,CAACI,cAAc,CAAC,CAAC;IACtB;IAGF,IAAIC,GAAG;IAEPH,MAAM,CAAC;MAAEI,IAAI,EAAE;IAAc,CAAC,CAAC,CAAC,CAAC;;IAGjCC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IAErB,IAAGA,QAAQ,KAAKE,SAAS,EAAC;MACvBE,GAAG,GAAG,MAAMT,aAAa,CAACa,IAAI,CAAC,GAAGX,GAAG,EAAE,EAAEG,QAAQ,CAAC;IACrD,CAAC,MACG;MACDI,GAAG,GAAG,MAAMT,aAAa,CAACc,GAAG,CAAC,GAAGZ,GAAG,IAAIC,KAAK,EAAE,CAAC;IACnD;IAEA,IAAIM,GAAG,CAACM,MAAM,KAAK,GAAG,EAAE;MAEtBT,MAAM,CAAC;QACLI,IAAI,EAAE,aAAa;QACnBM,OAAO,EAAEP,GAAG,CAACQ,IAAI,CAACD,OAAO;QACzBE,OAAO,EAAET,GAAG,CAACQ,IAAI,CAACC,OAAO;QACzBC,QAAQ,EAAGV,GAAG,CAACQ,IAAI,CAACE,QAAQ;QAC5BC,KAAK,EAAGX,GAAG,CAACQ,IAAI,CAACG;MACnB,CAAC,CAAC;MAEF,OAAO,IAAI;IAEb,CAAC,MAAI;MACH,OAAO,KAAK;IACd;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IAGZV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;IAChBf,MAAM,CAAC;MACLI,IAAI,EAAE,aAAa;MACnBY,KAAK,EAAED,GAAG;MACVH,OAAO,EAAEG,GAAG,CAACH;IACf,CAAC,CAAC;IAEF,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}